---
# Docker pull
- name: pull an image
  become: yes
  docker_image:
    name: ibmcom/couchdb3:{{ version }}
    source: pull


- name: Check if containers running
  become: yes 
  docker_container_info:
    name: "couchdb1{{inventory_hostname}}"
  register: container_exists

- name: If container running, stop
  become: yes
  when: container_exists.exists
  docker_container:
    name: "couchdb1{{inventory_hostname}}"
    state: stopped


- name: Remove current docker containers
  become: yes 
  when: container_exists.exists
  docker_prune:
    containers: yes
    images: yes


- name: Create docker container
  become: yes
  docker_container:
    name: couchdb1{{inventory_hostname}}
    env:
      COUCHDB_USER: "{{ user }}"
      COUCHDB_PASSWORD: "{{ password }}"
      COUCHDB_SECRET: "{{ cookie }}"
      ERL_FLAGS: '-setcookie \"{{cookie}}\" -name \"couchdb@{{ inventory_hostname}}\"'
    ports:
      - "5984:5984"
      - "4369:4369"
      - "9100-9200:9100-9200"
    state: started
    image: ibmcom/couchdb3:{{ version}}

# Run on workers
- name: Set up cluster
  when : inventory_hostname in groups['workers']
  uri:
    url:  http://{{ user}}:{{ password}}@{{inventory_hostname}}:5984/_cluster_setup
    method: POST
    body:
      action: "enable_cluster"
      bind_address: 0.0.0.0
      port: 5984
      username: "{{ user}}"
      password: "{{ password }}"
      remote_node: "{{ inventory_hostname }}"
      remote_current_user: "{{ user}}"
      remote_current_password: "{{ password }}"
      node_count: 4
    body_format: json
    headers:
      Content-Type: application/json

# Run on workers
- name: Connect to cluster, adding node
  when : inventory_hostname in groups['workers']
  uri:
    url:  http:///{{ user}}:{{ password}}@115.146.95.103:5984/_cluster_setup
    method: POST
    body:
      action: add_node
      bind_address: 0.0.0.0
      username: "{{ user}}"
      password: "{{ password }}"
      port: 5984
    body_format: json
    headers:
      Content-Type: application/json

# Complete set up
- name: Join node to cluster
  when: inventory_hostname in groups['configserver']
  uri:
    url:  http:///{{ user}}:{{ password}}@115.146.95.103:5984/_cluster_setup
    method: POST
    body:
      action: finish_cluster
    body_format: json
    headers:
      Content-Type: application/json
    register: finished_cluster
# Verify complete set up
- name: Verify install
  when: inventory_hostname in groups['configserver']
  uri:
    url: 'http:///{{ user}}:{{ password}}@115.146.95.103:5984/_cluster_setup'
    method: GET

# Check clustered nodes configuration
- name: Check clustered nodes configuration
  when: inventory_hostname in groups['configserver']
  uri:
    url: 'http:///{{ user}}:{{ password}}@115.146.95.103:5984/_membership'
    method: GET
  register: membership